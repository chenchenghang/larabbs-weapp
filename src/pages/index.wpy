<template>
    <swiper class="swiper" indicator-active-color="{{indicatorActiveColor}}" indicator-dots="{{indicatorDots}}" autoplay="{{autoplay}}" interval="{{interval}}" duration="{{duration}}" circular="true">
      <block wx:for="{{adList}}" wx:key="key">
        <swiper-item>
          <image src="{{item.picUrl}}" class="slide-image" @tap="goToAdvert({{item.advertUrl}})" />
        </swiper-item>
      </block>
    </swiper>
    <view class="artwork-tabs">
        <view bindtap="onSwitchTab" class="artwork-tab bg-color-{{item.class}} {{item.active?'artwork-tab-active':''}}" data-categoryid="{{item.category_id}}" wx:for="{{artworkTabs}}" wx:for-index="tab_index" wx:key="j">
            <view class="artwork-tab-item-title">{{item.category_title}}</view>
            <view class="artwork-tab-item-subtitle">{{item.category_slogan}}</view>
        </view>
    </view>
</template>

<script>
  import wepy from 'wepy'
  import api from '@/utils/api'
  import config from '@/configs'
  import dd1 from '@/dddd1'
  import dd2 from '@/dddd2'
  export default class Login extends wepy.page {
    config = {
      navigationBarTitleText: '登录'
    }
    data = {
      interval: 3000,
      duration: 1000,
      autoplay: true,
      indicatorDots: true,
      artworkTabs: config.artworkTabs,
      indicatorActiveColor: '#fff',
      adList: dd1.list,
      dd1: dd1,
      dd2: dd2,
      // 用户名
      // 密码
      packages: [],
      // 是否有错
      photos: [],
      // 错误信息
      showMask: !1
    }
    methods = {
      // 绑定用户名 input 变化
      bindUsernameInput (e) {
        this.username = e.detail.value
      },
      // 绑定密码 input 变化
      bindPasswordInput (e) {
        this.password = e.detail.value
      },
      // 表单提交
      async submit() {
        // 提交时重置错误
        this.error = false
        this.errorMessage = ''

        if (!this.username || !this.password) {
          this.errorMessage = '请填写账户名和密码'
          return
        }

        // 获取用户名和密码
        let params = {
          username: this.username,
          password: this.password
        }

        try {
          let authResponse = await api.login(params)

          // 请求结果为 401 说明用户名和密码错误，显示错误提示
          if (authResponse.statusCode === 401) {
            this.error = true
            this.errorMessage = authResponse.data.message
            this.$apply()
          }

          // 201 为登录正确，返回上一页
          if (authResponse.statusCode === 201) {
            wepy.navigateBack()
          }
        } catch (err) {
          wepy.showModal({
            title: '提示',
            content: '服务器错误，请联系管理员'
          })
        }
      }
    }
    async onSwitchTab (e) {
      this.$preload(e.currentTarget.dataset.categoryid, 'Gcaufy')
      console.log(e.currentTarget.dataset.categoryid)
      this.$redirect('/pages/photos', {categoryid: e.currentTarget.dataset.categoryid})
    }
    // 页面打开事件
    async onShow() {
      console.log(dd1.list)
      console.log(dd1)
      // try {
      //   // 打开页面自动调用一次登录
      //   //let authResponse = await api.login()

      //   // 登录成功返回上一页
      //   if (authResponse.statusCode === 201) {
      //     wepy.navigateBack()
      //   }
      // } catch (err) {
      //   wepy.showModal({
      //     title: '提示',
      //     content: '服务器错误，请联系管理员'
      //   })
      // }
    }
  }
</script>
 <style lang="less">
page {
    width: 100vw;
    background: #fff;
}
.photos-container {
    width: 100%;
    min-height: 100vh;
    padding: 0;
}
.photos-title {
    color: #353535;
    font-weight: bold;
    padding: 20rpx 0 50rpx 0;
    position: relative;
}
.photos-header {
    width: 100%;
    padding: 0 30rpx 24rpx 30rpx;
    background: #fff;
    position: fixed;
    left: 0;
    top: 0;
    z-index: 100;
}
.photos-list {
    width: 100%;
    padding: 20rpx 0rpx 0rpx;
    position: relative;
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
}
.photos-column {
    width: calc((100% - 10rpx) / 2);
    display: flex;
    flex-flow: column wrap;
}
.photos-item {
    width: 100%;
    align-self: center;
    margin-bottom: 14rpx;
}
.photos-img {
    width: 100%;
    border: 0 solid #efefef;
    padding: 8rpx 0;
    display: flex;
    align-items: center;
    justify-content: center;
}
.photos-img>image {
    width: 94%;
}
.artwork-tabs {
    width: 100%;
    height: 150rpx;
    display: flex;
    align-items: center;
    justify-content: space-between;
    font-size: 24rpx;
    color: #101010;
    background: #fff;
}
.artwork-mask {
    width: 100vw;
    height: 100vh;
    position: fixed;
    left: 0;
    top: 0;
    background: rgba(0,0,0,.5);
    z-index: 90;
}
.slide-image {
  width: 100%;
  height: 100%;
}
.artwork-tab-active {
    color: #09BB07;
}
.artwork-tab {
    width: 100%;
    height: 150rpx;
    flex: 1;
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    justify-content: center;
    align-content: center;
    align-items: center;
    position: relative;
    transition: all .1s ease-in-out;
}
.artwork-tab-active::after {
    width: 0;
    height: 0;
    border-left: 8px solid transparent;
    border-right: 8px solid transparent;
    border-bottom: 8px solid #fff;
    position: absolute;
    bottom: 0;
    left: 40%;
    content: " ";
}
.artwork-tab:active {
    transform: scale(1.1);
    z-index: 999;
}
.artwork-tab-item-title {
    color: #fff;
    font-size: 22px;
    text-align: center;
    font-family: 'STHeitiSC-Light';
    align-self: center;
    padding-top: 10rpx;
}
.artwork-tab-item-subtitle {
    color: #fff;
    padding-top: 4rpx;
    font-size: 10px;
    text-align: center;
    align-self: center;
}
</style>
